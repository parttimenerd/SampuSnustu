A clever person solves a problem. A wise person avoids it.
- Albert Einstein
~~~
My own view is that this planet is used as a penal colony, lunatic asylum and dumping ground by a superior civilization, to get rid of the undesirable and unfit. I can't prove it, but you can't disprove it either. It happens to be my view, but it doesn't challenge any of the findings of Darwin or Huxley or Einstein or Hawking.
- Christopher Hitchens
~~~
Toast always lands buttered-side down, and a cat always lands feet first. I propose we strap buttered toast to the back of a cat; the two will hover, spinning inches from the ground. With a giant buttered-toast/cat array, a hovering monorail could easily link New York with Chicago. - John Frazee
~~~
All science is either physics or stamp collecting.
- Sir Ernest Rutherford
~~~
Physicists use the wave theory on Mondays, Wednesdays and Fridays and the particle theory on Tuesdays, Thursdays and Saturdays
- William Henry Bragg
~~~
How I need a drink, alcoholic of course, after the heavy lectures involving quantum mechanics.
~~~
It is impossible to travel faster as the speed of light, and certainly not desirable, as one's hat keeps blowing up.
- Woody Allen
~~~
If you want to make an apple pie from scratch, you must first create the universe.
- Carl Sagan
~~~
The most exiting phrase to hear in science, the one that heralds new discoveries, is not 'Eureka!' (I found it) but 'That's funny...'
- Isaac Asimov
~~~
43rd Law of Computing: Anything that can go wr Seek Error reading Drive C: Abort, Retry, Ignore, Fail?
~~~
The attention span of a computer is only as long as its electrical cord.
~~~
Computer programmers never die, they just become lost in the processing.
~~~
Computers Unite! You have nothing to lose but your operators.
~~~
Documentation is the castor oil of programming. Managers know it must be good because the programmers hate it so much.
~~~
Eagleson's Law of Programming: Any code of your own that you haven't looked at for six or more months, might as well have been written by someone else.
~~~
Gilb's First Law of Unreliability: Computers are unreliable but humans are even more unreliable.
~~~
Good programming is 99% sweat and 1% coffee.
~~~
If God had intended man to have computers, he would have given him 16 fingers.
~~~
In computing, turning the obvious into the useful is a living definition of the word frustration.
~~~
Laws of Computer Programming:
<ol>
    <li>Any given program, when running, is obsolete.</li>
    <li>Any given program costs more and takes longer.</li>
    <li>If a program is useful, it will have to be changed.</li>
    <li>If a program is useless, it will have to be documented.</li>
    <li>Any given program will expand to fill all available memory.</li>
    <li>The value of a program is proportional to the weight of its output.</li>
    <li>Program complexity grows until it exceeds the capability of the programmer who must maintain it.</li>
</ol>
~~~
On a clear disk you can seek forever.
~~~
Programmer (n): An organism that can turn caffeine into code.
~~~
Programmers get overlaid.
~~~
Programming Department: Mistakes made while you wait.
~~~
Programming is an art form that fights back.
~~~
Programming would be so much easier without all the users.
~~~
The problem about all graphical programming languages is that when your project becomes complex, not only will you have spaghetti code, but it will actually look like spaghetti too.
~~~
Small programs are for small minds.
~~~
Software and cathedrals are much the same – first we build them, then we pray.
- Sam Redwine
There are 10 types of people in this world, those who understand binary and those who do not.
~~~
To err is human. To blame it on a computer is even more so.
~~~
Troutman's First Programming Postulate: If a test installation functions perfectly, all subsequent systems will malfunction.
Troutman's Second Programming Postulate: The most harmful error will not be discovered until a program has been in production for at least six months.
Troutman's Third Programming Postulate: Job control cards that positively cannot be arranged in improper order will be.
Troutman's Fourth Programming Postulate: Interchangeable tapes won't.
Troutman's Fifth Programming Postulate: If the input editor has been designed to reject all bad input, an ingenious idiot will discover a method to get bad data past it.
Troutman's Sixth Programming Postulate: Profanity is the one language all programmers know best.
~~~
We don't really understand it, so we'll give it to the programmers.
~~~
Weinberg's Second Law: If builders built buildings the way programmers wrote programs, then the first woodpecker that came along would destroy civilization.
~~~
Writing it is easy, understanding it is hard.
~~~
Programming today is a race between software engineers striving to build bigger and better idiot-proof programs, and the universe trying to build bigger and better idiots. So far, the universe is winning.
- Rick Cook
~~~
Computers are man's attempt at designing a cat: it does whatever it wants, whenever it wants, and rarely ever at the right time.
- EMCIC, Keenspot Elf Life Forum, 2001-Apr-26
~~~
There is no programming language, no matter how structured, that will prevent programmers from making bad programs.
- Larry Flon
~~~
[This] reminds me of a quotation from somebody that, whenever he tried to explain the logical structure of a programming language to a programmer, it was like a cat trying to explain to a fish what it feels like to be wet.
- Saul Gorn, quoted by Julien Green
~~~
Programming: when the ideas turn into the real things.
- Maciej Kaczmarek
~~~
Most software today is very much like an Egyptian pyramid with millions of bricks piled on top of each other, with no structural integrity, but just done by brute force and thousands of slaves.
- Alan Kay
~~~
The most important thing in a programming language is the name. A language will not succeed without a good name. I have recently invented a very good name, and now I am looking for a suitable language.
- Donald Knuth
~~~
Computer programming is tremendous fun. Like music, it is a skill that derives from an unknown blend of innate talent and constant practice. Like drawing, it can be shaped to a variety of ends – commercial, artistic, and pure entertainment. Programmers have a well-deserved reputation for working long hours, but are rarely credited with being driven by creative fevers. Programmers talk about software development on weekends, vacations, and over meals not because they lack imagination, but because their imagination reveals worlds that others cannot see.
- Larry O'Brien and Bruce Eckel in Thinking in C#
~~~
Computer Science is embarrassed by the computer.
- Alan Perlis, Epigrams on Programming
~~~
Prolonged contact with the computer turns mathematicians into clerks and vice versa.
- Alan Perlis, Epigrams on Programming
~~~
Structured Programming supports the law of the excluded muddle.
- Alan Perlis, Epigrams on Programming
~~~
There are two ways to write error-free programs; only the third one works.
- Alan Perlis, Epigrams on Programming
~~~
Why bother with subroutines when you can type fast?
- Vaughn Rokosz
~~~
Don't get suckered in by the comments … they can be terribly misleading.
- Dave Storer
~~~
The three chief virtues of a programmer are: Laziness, Impatience and Hubris.  
- Larry Wall
~~~
Zawinski's Law: Every program attempts to expand until it can read mail. Those programs which cannot so expand are replaced by ones which can.
- Jamie Zawinski (who called it the Law of Software Envelopment)
~~~
There are two ways of constructing a software design. One way is to make it so simple that there are obviously no deficiencies. And the other way is to make it so complicated that there are no obvious deficiencies.
- C.A.R. Hoare
~~~
bug, n: An elusive creature living in a program that makes it incorrect. The activity of debugging, or removing bugs from a program, ends when people get tired of doing it, not when the bugs are removed.
- Datamation, January 15, 1984
~~~
Everyone knows that debugging is twice as hard as writing a program in the first place. So if you're as clever as you can be when you write it, how will you ever debug it?
- Brian Kernighan
~~~
As soon as we started programming, we found to our surprise that it wasn't as easy to get programs right as we had thought. Debugging had to be discovered. I can remember the exact instant when I realized that a large part of my life from then on was going to be spent in finding mistakes in my own programs.
- Maurice Wilkes discovers debugging, 1949